
{
  "Service": "Azure API Management",
  "Category": "Project Implementation",
  "Tasks": [
    {
      "Task": "Set up source code control",
      "Task Description": "Set up either GitHub or Azure Repos for your source code control system. This choice will determine your choice of pipeline runner as well. GitHub can use Azure Pipelines or GitHub Actions, whereas Azure Repos must use Azure Pipelines.",
      "Documentation Link": "https://raw.githubusercontent.com/MicrosoftDocs/azure-docs/main/articles/api-management/api-management-key-concepts.md"
    },
    {
      "Task": "Set up Azure API Management service",
      "Task Description": "Set up an Azure API Management service for each API developer so that they can develop API definitions along with the API service. Use the consumption or developer SKU when creating the service.",
      "Documentation Link": "https://raw.githubusercontent.com/MicrosoftDocs/azure-docs/main/articles/api-management/get-started-create-service-instance.md"
    },
    {
      "Task": "Use policy fragments",
      "Task Description": "Use policy fragments to reduce the new policy that developers need to write for each API.",
      "Documentation Link": "https://raw.githubusercontent.com/MicrosoftDocs/azure-docs/main/articles/api-management/api-management-howto-policies.md"
    },
    {
      "Task": "Use named values and backends",
      "Task Description": "Use named values and backends to ensure that policies are generic and can apply to any API Management instance.",
      "Documentation Link": "https://raw.githubusercontent.com/MicrosoftDocs/azure-docs/main/articles/api-management/api-management-howto-properties.md"
    },
    {
      "Task": "Extract working API definition",
      "Task Description": "Use the Azure APIOps Toolkit to extract a working API definition from the developer service.",
      "Documentation Link": "https://raw.githubusercontent.com/MicrosoftDocs/azure-docs/main/articles/api-management/api-management-howto-policies.md"
    },
    {
      "Task": "Set up API approval process",
      "Task Description": "Set up an API approval process that runs on each pull request. The API approval process should include breaking change detection, linting, and automated API testing.",
      "Documentation Link": "https://raw.githubusercontent.com/MicrosoftDocs/azure-docs/main/articles/api-management/api-management-howto-policies.md"
    },
    {
      "Task": "Publish API to production",
      "Task Description": "Use the Azure APIOps Toolkit publisher to publish the API to your production API Management service.",
      "Documentation Link": "https://raw.githubusercontent.com/MicrosoftDocs/azure-docs/main/articles/api-management/api-management-howto-policies.md"
    },
    {
      "Task": "Create API Management instance",
      "Task Description": "From the Azure portal menu, select 'Create a resource'. On the 'Create a resource' page, select 'Integration' > 'API Management'. Enter the required settings and select 'Review + create'.",
      "Documentation Link": "https://raw.githubusercontent.com/MicrosoftDocs/azure-docs/main/articles/api-management/get-started-create-service-instance.md"
    },
    {
      "Task": "Manage API Management using Azure Automation",
      "Task Description": "Use Windows PowerShell cmdlets for Azure API Management API within Azure Automation to perform many of your API Management tasks.",
      "Documentation Link": "https://raw.githubusercontent.com/MicrosoftDocs/azure-docs/main/articles/api-management/powershell-samples.md"
    },
    {
      "Task": "Integrate with Azure services",
      "Task Description": "Integrate API Management with Azure Key Vault, Azure Monitor, Application Insights, Virtual networks, private endpoints, Application Gateway, Microsoft Entra ID, Event Hubs, and several Azure compute offerings.",
      "Documentation Link": "https://raw.githubusercontent.com/MicrosoftDocs/azure-docs/main/articles/api-management/api-management-howto-integrate-internal-vnet-appgateway.md"
    },
    {
      "Task": "Customize developer portal",
      "Task Description": "Customize the look and feel of the developer portal by adding custom content, customizing styles, and adding branding. Extend the developer portal further by self-hosting.",
      "Documentation Link": "https://raw.githubusercontent.com/MicrosoftDocs/azure-docs/main/articles/api-management/developer-portal-self-host.md"
    },
    {
      "Task": "Use Infrastructure as Code (IaC)",
      "Task Description": "Use Azure Resource Management templates, Bicep, Terraform, or Pulumi to create infrastructure resources for API Management. Treat the infrastructure definition as code that can be versioned and stored in a source control repository.",
      "Documentation Link": "https://raw.githubusercontent.com/MicrosoftDocs/azure-docs/main/articles/api-management/api-management-howto-policies.md"
    },
    {
      "Task": "Deploy API definition",
      "Task Description": "Use Azure APIOps Toolkit, dotnet-apim, or Terraform to deploy the API definition to your service. Ensure the CI/CD platform can be triggered by a check-in and run command line tools that communicate with Azure.",
      "Documentation Link": "https://raw.githubusercontent.com/MicrosoftDocs/azure-docs/main/articles/api-management/api-management-howto-policies.md"
    },
    {
      "Task": "Monitor and alert",
      "Task Description": "Use Azure Monitor for logging, reporting, and alerting on management operations, system events, and API requests.",
      "Documentation Link": "https://raw.githubusercontent.com/MicrosoftDocs/azure-docs/main/articles/api-management/api-management-howto-use-azure-monitor.md"
    },
    {
      "Task": "Implement CI/CD pipelines",
      "Task Description": "Implement CI/CD pipelines for deploying an orchestration of components. Use built-in actions that abstract deployment activities or generic actions that run CLI commands or automation scripts.",
      "Documentation Link": "https://raw.githubusercontent.com/MicrosoftDocs/azure-docs/main/articles/api-management/api-management-howto-policies.md"
    },
    {
      "Task": "Configure environment-specific settings",
      "Task Description": "Prepare the code with environment-specific configuration, such as connection strings and references to external resources. Store sensitive values as reference pointers to entries in a secrets store like Azure Key Vault.",
      "Documentation Link": "https://raw.githubusercontent.com/MicrosoftDocs/azure-docs/main/articles/api-management/api-management-howto-properties.md"
    },
    {
      "Task": "Package and deploy code",
      "Task Description": "Package the code for deployment in various environments and deploy the packaged code in the destination environment. Update the application settings repository with the correct environment values.",
      "Documentation Link": "https://raw.githubusercontent.com/MicrosoftDocs/azure-docs/main/articles/api-management/api-management-howto-policies.md"
    },
    {
      "Task": "Update permissions",
      "Task Description": "Update any required permissions that depend on code and get your application ready for execution, if required.",
      "Documentation Link": "https://raw.githubusercontent.com/MicrosoftDocs/azure-docs/main/articles/api-management/api-management-howto-policies.md"
    }
  ]
}