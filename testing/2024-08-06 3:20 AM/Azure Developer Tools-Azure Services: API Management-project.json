
{
  "Service": "Azure API Management",
  "Category": "Project Implementation",
  "Tasks": [
    {
      "Task": "Set up source code control system",
      "Task Description": "Set up either GitHub or Azure Repos for your source code control system. This choice will determine your choice of pipeline runner as well. GitHub can use Azure Pipelines or GitHub Actions, whereas Azure Repos must use Azure Pipelines.",
      "Documentation Link": "https://raw.githubusercontent.com/MicrosoftDocs/azure-docs/main/articles/api-management/api-management-key-concepts.md"
    },
    {
      "Task": "Set up Azure API Management service",
      "Task Description": "Set up an Azure API Management service for each API developer so that they can develop API definitions along with the API service. Use the consumption or developer SKU when creating the service.",
      "Documentation Link": "https://raw.githubusercontent.com/MicrosoftDocs/azure-docs/main/articles/api-management/get-started-create-service-instance.md"
    },
    {
      "Task": "Use policy fragments",
      "Task Description": "Use policy fragments to reduce the new policy that developers need to write for each API.",
      "Documentation Link": "https://raw.githubusercontent.com/MicrosoftDocs/azure-docs/main/articles/api-management/api-management-howto-policies.md"
    },
    {
      "Task": "Use named values and backends",
      "Task Description": "Use named values and backends to ensure that policies are generic and can apply to any API Management instance.",
      "Documentation Link": "https://raw.githubusercontent.com/MicrosoftDocs/azure-docs/main/articles/api-management/api-management-howto-properties.md"
    },
    {
      "Task": "Extract working API definition",
      "Task Description": "Use the Azure APIOps Toolkit to extract a working API definition from the developer service.",
      "Documentation Link": "https://raw.githubusercontent.com/MicrosoftDocs/azure-docs/main/articles/api-management/api-management-howto-policies.md"
    },
    {
      "Task": "Set up API approval process",
      "Task Description": "Set up an API approval process that runs on each pull request. The API approval process should include breaking change detection, linting, and automated API testing.",
      "Documentation Link": "https://raw.githubusercontent.com/MicrosoftDocs/azure-docs/main/articles/api-management/api-management-howto-policies.md"
    },
    {
      "Task": "Publish API to production",
      "Task Description": "Use the Azure APIOps Toolkit publisher to publish the API to your production API Management service.",
      "Documentation Link": "https://raw.githubusercontent.com/MicrosoftDocs/azure-docs/main/articles/api-management/api-management-howto-policies.md"
    },
    {
      "Task": "Create API Management instance",
      "Task Description": "From the Azure portal menu, select 'Create a resource'. On the 'Create a resource' page, select 'Integration' > 'API Management'. Enter the required settings and select 'Review + create'.",
      "Documentation Link": "https://raw.githubusercontent.com/MicrosoftDocs/azure-docs/main/articles/api-management/get-started-create-service-instance.md"
    },
    {
      "Task": "Manage API Management with Azure Automation",
      "Task Description": "Use Windows PowerShell cmdlets for Azure API Management API within Azure Automation to perform many of your API Management tasks.",
      "Documentation Link": "https://raw.githubusercontent.com/MicrosoftDocs/azure-docs/main/articles/api-management/powershell-samples.md"
    },
    {
      "Task": "Customize developer portal",
      "Task Description": "Customize the look and feel of the developer portal by adding custom content, customizing styles, and adding your branding. Extend the developer portal further by self-hosting.",
      "Documentation Link": "https://raw.githubusercontent.com/MicrosoftDocs/azure-docs/main/articles/api-management/developer-portal-self-host.md"
    },
    {
      "Task": "Use developer portal",
      "Task Description": "App developers use the open-source developer portal to discover the APIs, onboard to use them, and learn how to consume them in applications.",
      "Documentation Link": "https://raw.githubusercontent.com/MicrosoftDocs/azure-docs/main/articles/api-management/developer-portal-self-host.md"
    },
    {
      "Task": "Deploy API definition",
      "Task Description": "If using the Azure APIOps Toolkit, the toolkit includes a publisher that writes the API definition to the target service. If using dotnet-apim, the API definition is represented as an ARM template. Tasks are available for Azure Pipelines and GitHub Actions to deploy an ARM template.",
      "Documentation Link": "https://raw.githubusercontent.com/MicrosoftDocs/azure-docs/main/articles/api-management/api-management-howto-policies.md"
    },
    {
      "Task": "Manage environment-specific configuration",
      "Task Description": "Manage environment-specific configuration associated with each component, such as permissions, secrets, alerts, and so on. Use Azure Key Vault for secure safekeeping and management of client certificates and secrets.",
      "Documentation Link": "https://raw.githubusercontent.com/MicrosoftDocs/azure-docs/main/articles/api-management/api-management-howto-properties.md"
    },
    {
      "Task": "Use Infrastructure as Code (IaC)",
      "Task Description": "Use Infrastructure as Code (IaC) by creating infrastructure resources using Azure Resource Management templates. Use abstraction tools like Bicep, Terraform, or Pulumi for a code-like experience.",
      "Documentation Link": "https://raw.githubusercontent.com/MicrosoftDocs/azure-docs/main/articles/api-management/api-management-howto-policies.md"
    },
    {
      "Task": "Deploy logic for integration workflows",
      "Task Description": "Deploy the logic that implements your end-to-end workflows. Use built-in actions that abstract deployment activities or use generic actions that run either CLI commands or automation scripts such as PowerShell and Bash.",
      "Documentation Link": "https://raw.githubusercontent.com/MicrosoftDocs/azure-docs/main/articles/api-management/api-management-howto-policies.md"
    },
    {
      "Task": "Prepare code with environment-specific configuration",
      "Task Description": "Prepare the code with the environment-specific configuration. Store sensitive values, such as secrets, as reference pointers to entries in a secrets store, such as an Azure key vault.",
      "Documentation Link": "https://raw.githubusercontent.com/MicrosoftDocs/azure-docs/main/articles/api-management/api-management-howto-properties.md"
    },
    {
      "Task": "Package code for deployment",
      "Task Description": "Package the code for deployment in various environments.",
      "Documentation Link": "https://raw.githubusercontent.com/MicrosoftDocs/azure-docs/main/articles/api-management/api-management-howto-policies.md"
    },
    {
      "Task": "Deploy packaged code",
      "Task Description": "Deploy packaged code in the destination environment. Update the application settings repository with the correct environment values, either as clear text or references to entries in your key vault.",
      "Documentation Link": "https://raw.githubusercontent.com/MicrosoftDocs/azure-docs/main/articles/api-management/api-management-howto-policies.md"
    },
    {
      "Task": "Update required permissions",
      "Task Description": "Update any required permissions that depend on code.",
      "Documentation Link": "https://raw.githubusercontent.com/MicrosoftDocs/azure-docs/main/articles/api-management/api-management-howto-policies.md"
    },
    {
      "Task": "Get application ready for execution",
      "Task Description": "Get your application ready for execution, if required.",
      "Documentation Link": "https://raw.githubusercontent.com/MicrosoftDocs/azure-docs/main/articles/api-management/api-management-howto-policies.md"
    }
  ]
}